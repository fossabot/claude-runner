{
  "name": "claude-runner",
  "displayName": "Claude Runner",
  "description": "Execute Claude Code commands directly from VS Code with an intuitive interface",
  "version": "0.2.0",
  "publisher": "Codingworkflow",
  "private": true,
  "license": "GPL-3.0",
  "icon": "assets/icon.png",
  "readme": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/codingworkflow/claude-runner"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "AI",
    "Chat",
    "Programming Languages",
    "Education",
    "Machine Learning"
  ],
  "keywords": [
    "claude",
    "claude code",
    "ai",
    "assistant",
    "code generation",
    "terminal",
    "anthropic",
    "Code Assist",
    "Pair Programmer",
    "LLM"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "claude-runner.showPanel",
        "title": "Claude Runner: Show Panel",
        "icon": "$(terminal)"
      },
      {
        "command": "claude-runner.runInteractive",
        "title": "Claude Runner: Run Interactive Mode",
        "icon": "$(play)"
      },
      {
        "command": "claude-runner.runTask",
        "title": "Claude Runner: Run Task",
        "icon": "$(run)"
      },
      {
        "command": "claude-runner.selectModel",
        "title": "Claude Runner: Select Model",
        "icon": "$(settings-gear)"
      },
      {
        "command": "claude-runner.openSettings",
        "title": "Claude Runner: Open Settings",
        "icon": "$(gear)"
      },
      {
        "command": "claude-runner.openInEditor",
        "title": "Claude Runner: Open in Editor",
        "icon": "$(link-external)"
      },
      {
        "command": "claude-runner.toggleAdvancedTabs",
        "title": "Claude Runner: Show Usage & Logs",
        "icon": "$(graph)"
      },
      {
        "command": "claude-runner.recheckClaude",
        "title": "Claude Runner: Recheck Claude Installation"
      },
      {
        "command": "claude-runner.refreshCommands",
        "title": "Refresh Commands",
        "icon": "$(refresh)"
      },
      {
        "command": "claude-runner.addGlobalCommand",
        "title": "Add Global Command",
        "icon": "$(add)"
      },
      {
        "command": "claude-runner.addProjectCommand",
        "title": "Add Project Command",
        "icon": "$(add)"
      },
      {
        "command": "claude-runner.refreshUsageReport",
        "title": "Refresh Usage Report",
        "icon": "$(refresh)"
      },
      {
        "command": "claude-runner.refreshLogs",
        "title": "Refresh Logs",
        "icon": "$(refresh)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claude-runner",
          "title": "Claude Runner",
          "icon": "assets/logo.png"
        }
      ]
    },
    "views": {
      "claude-runner": [
        {
          "type": "webview",
          "id": "claude-runner.mainView",
          "name": "Chat & Pipeline",
          "icon": "$(terminal)",
          "contextualTitle": "Claude Runner Control Panel"
        },
        {
          "type": "webview",
          "id": "claude-runner.commandsView",
          "name": "Commands",
          "icon": "$(symbol-keyword)",
          "contextualTitle": "Claude Commands Manager"
        },
        {
          "type": "webview",
          "id": "claude-runner.usageLogsView",
          "name": "Usage & Logs",
          "icon": "$(graph)",
          "contextualTitle": "Usage Reports & Conversation Logs"
        }
      ]
    },
    "configuration": {
      "title": "Claude Runner",
      "properties": {
        "claudeRunner.defaultModel": {
          "type": "string",
          "enum": [
            "claude-opus-4-20250514",
            "claude-sonnet-4-20250514",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-haiku-20241022"
          ],
          "default": "claude-sonnet-4-20250514",
          "description": "Default Claude model to use"
        },
        "claudeRunner.defaultRootPath": {
          "type": "string",
          "default": "",
          "description": "Default root path for Claude commands (empty = current workspace)"
        },
        "claudeRunner.allowAllTools": {
          "type": "boolean",
          "default": false,
          "description": "Allow all tools by default (uses --dangerously-skip-permissions)"
        },
        "claudeRunner.outputFormat": {
          "type": "string",
          "enum": [
            "text",
            "json",
            "stream-json"
          ],
          "default": "text",
          "description": "Default output format for task mode"
        },
        "claudeRunner.maxTurns": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 50,
          "description": "Maximum number of turns for task mode"
        },
        "claudeRunner.showVerboseOutput": {
          "type": "boolean",
          "default": false,
          "description": "Show verbose output in task mode"
        },
        "claudeRunner.terminalName": {
          "type": "string",
          "default": "Claude Interactive",
          "description": "Name for Claude interactive terminals"
        },
        "claudeRunner.autoOpenTerminal": {
          "type": "boolean",
          "default": true,
          "description": "Automatically show terminal when running interactive mode"
        }
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "claude-runner.showPanel",
          "when": "true"
        },
        {
          "command": "claude-runner.runInteractive",
          "when": "true"
        },
        {
          "command": "claude-runner.runTask",
          "when": "true"
        }
      ],
      "view/title": [
        {
          "command": "claude-runner.openSettings",
          "when": "view == claude-runner.mainView",
          "group": "navigation@1"
        },
        {
          "command": "claude-runner.openInEditor",
          "when": "view == claude-runner.mainView",
          "group": "navigation@2"
        }
      ]
    }
  },
  "scripts": {
    "preinstall": "node scripts/sync-version.js",
    "vscode:prepublish": "npm run compile-production",
    "compile": "webpack --mode none",
    "compile-production": "webpack --mode production --devtool hidden-source-map",
    "watch": "webpack --watch --mode development",
    "compile-tests": "tsc -p ./tsconfig.test.json --outDir out",
    "watch-tests": "tsc -p ./tsconfig.test.json -w --outDir out",
    "pretest": "npm run lint",
    "lint": "eslint src --ext ts,tsx",
    "test": "npm run test:unit",
    "test:integration": "npm run compile-tests && node ./out/tests/unit/runTest.js",
    "test:unit": "jest",
    "test:unit:watch": "jest --watch",
    "test:unit:coverage": "jest --coverage",
    "test:e2e": "jest --testPathPattern=tests/e2e --passWithNoTests",
    "test:e2e:coverage": "jest --testPathPattern=tests/e2e --coverage",
    "test:integration:coverage": "jest --testPathPattern=tests/integration --coverage",
    "test:all": "npm run test:unit && npm run test:e2e && npm run test:integration",
    "test:all:coverage": "jest --coverage --testPathPattern=\"(tests/e2e|tests/integration|src/test/services)\"",
    "test:claude-detection": "node scripts/test-claude-detection.js",
    "test:ci:without-claude": "npm run test:unit && npm run test:claude-detection",
    "test:ci:with-claude": "npm run test:ci:without-claude && npm run test:e2e && npm run test:integration",
    "test:watch": "npm run test -- --watch",
    "clean": "rimraf dist out coverage *.vsix *.log",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "type-check": "tsc --noEmit",
    "package": "npm run sync-version && vsce package --out dist/claude-runner-$(node -p \"require('./package.json').version\").vsix",
    "prepare": "husky",
    "sync-version": "node scripts/sync-version.js",
    "version:patch": "npm run version:bump patch",
    "version:minor": "npm run version:bump minor",
    "version:major": "npm run version:bump major",
    "version:bump": "node scripts/bump-version.js",
    "scan-secrets": "node scripts/scan-secrets.js",
    "scan-secrets:all": "node scripts/scan-secrets.js --all",
    "prepare-marketplace": "node scripts/prepare-marketplace.js",
    "optimize-images": "node scripts/optimize-images.js",
    "quality": "npm run lint && npm run type-check && npm run format:check",
    "quality:fix": "npm run lint -- --fix && npm run format",
    "validate": "npm run quality && npm run test:unit",
    "ci": "npm run clean && npm run quality && npm run compile && npm run test:unit",
    "analyze-css": "node scripts/analyze-css.js",
    "analyze-css:clean": "npm run analyze-css && echo '\nðŸ§¹ To clean up unused CSS, review the report above and manually remove unused rules.'",
    "cleanup-css": "node scripts/cleanup-css.js plan",
    "cleanup-css:auto": "node scripts/cleanup-css.js auto-clean",
    "cleanup-css:list": "node scripts/cleanup-css.js list"
  },
  "devDependencies": {
    "@fullhuman/postcss-purgecss": "^7.0.2",
    "@testing-library/jest-dom": "^6.0.0",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.0.0",
    "@types/glob": "^8.1.0",
    "@types/jest": "^30.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^3.2.1",
    "css-loader": "^6.8.1",
    "eslint": "^8.56.0",
    "glob": "^10.3.10",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.0.0",
    "jest-environment-jsdom": "^29.0.0",
    "lint-staged": "^16.1.2",
    "mini-css-extract-plugin": "^2.7.6",
    "mocha": "^10.2.0",
    "prettier": "^3.1.1",
    "rimraf": "^5.0.5",
    "sinon": "^20.0.0",
    "style-loader": "^3.3.3",
    "ts-jest": "^29.0.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@types/js-yaml": "^4.0.9",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "glob": "^10.3.10",
    "js-yaml": "^4.1.0",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "rxjs": "^7.8.2"
  }
}
