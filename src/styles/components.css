/* Note: Button styles moved to CSS-in-JS in Button.tsx component */

/* Note: Input styles moved to CSS-in-JS in Input.tsx component */

/* Form groups - for backward compatibility */
.input-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.input-group.full-width {
  width: 100%;
  flex: 1;
}

.input-group label {
  font-size: var(--vscode-font-size);
  color: var(--vscode-foreground);
  font-weight: 500;
}

.input-error {
  font-size: var(--vscode-font-size);
  color: var(--vscode-errorForeground);
  margin-top: var(--spacing-xs);
}

/* Inputs - VSCode Native (for non-component inputs) */
textarea,
select {
  font-family: var(--vscode-font-family);
  font-size: var(--vscode-font-size);
  padding: var(--spacing-xs) var(--spacing-xs);
  background-color: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  border: 1px solid var(--vscode-input-border);
  border-radius: var(--border-radius-sm);
  line-height: 1.2;
}

textarea:focus,
select:focus {
  outline: 1px solid var(--vscode-focusBorder);
  outline-offset: -1px;
}

/* Toggle switch - simplified */
.toggle-container {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.toggle-switch {
  position: relative;
  width: 28px;
  height: 16px;
  background-color: var(--vscode-input-background);
  border: 1px solid var(--vscode-input-border);
  border-radius: 8px;
  cursor: pointer;
}

.toggle-switch.checked {
  background-color: var(--vscode-button-background);
}

.toggle-slider {
  position: absolute;
  top: 1px;
  left: 1px;
  width: 12px;
  height: 12px;
  background-color: var(--vscode-foreground);
  border-radius: 50%;
  transition: transform 0.2s ease;
}

.toggle-switch.checked .toggle-slider {
  transform: translateX(12px);
  background-color: var(--vscode-button-foreground);
}

/* Tab Navigation - VSCode native */
.tab-navigation {
  display: flex;
  border-bottom: 1px solid var(--vscode-tab-border);
  margin-bottom: var(--spacing-md);
}

/* Bottom Actions - Persistent button area */
.bottom-actions {
  padding: var(--spacing-md) 0;
  border-top: 1px solid var(--vscode-tab-border);
  margin-top: auto;
  display: flex;
  justify-content: center;
}

.bottom-actions .button-icon {
  margin-right: var(--spacing-xs);
}

.tab-button {
  padding: var(--spacing-xs) var(--spacing-md);
  background: transparent;
  color: var(--vscode-tab-inactiveForeground);
  border: none;
  cursor: pointer;
  font-size: 0.9em;
  border-bottom: 2px solid transparent;
  margin-bottom: -1px;
}

.tab-button:hover:not(:disabled) {
  color: var(--vscode-tab-activeForeground);
}

.tab-button.active {
  color: var(--vscode-tab-activeForeground);
  border-bottom-color: var(
    --vscode-tab-activeBorder,
    var(--vscode-focusBorder)
  );
}

.tab-content {
  margin-top: var(--spacing-sm);
}

/* Note: Loading spinner styles moved to CSS-in-JS in Button.tsx component */

/* Pause/Resume control styling */
.pause-resume-controls {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.paused-indicator {
  font-size: var(--vscode-font-size);
  color: var(--vscode-charts-orange);
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  background-color: var(--vscode-input-background);
  border: 1px solid var(--vscode-charts-orange);
  border-radius: var(--border-radius-sm);
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Card Component */
.card {
  margin-bottom: var(--spacing-md);
}

.card-header {
  margin-bottom: var(--spacing-sm);
}

.card-title {
  font-size: 1em;
  font-weight: 600;
  margin: 0;
  color: var(--vscode-foreground);
}

/* Chat Panel Specific */
.chat-info {
  margin-bottom: var(--spacing-sm);
}

.chat-info p {
  margin: 0;
  color: var(--vscode-descriptionForeground);
  font-size: 0.9em;
}

.chat-actions {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.chat-actions .button-group {
  display: flex;
  flex-direction: row;
  gap: var(--spacing-xs);
  align-items: center;
  align-self: flex-start;
}

.prompt-section {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.prompt-textarea {
  width: 100%;
  min-height: 120px;
  resize: vertical;
  font-family: var(--vscode-font-family);
  font-size: var(--vscode-font-size);
  padding: var(--spacing-xs) var(--spacing-xs);
  background-color: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  border: 1px solid var(--vscode-input-border);
  border-radius: var(--border-radius-sm);
  line-height: 1.2;
}

.prompt-textarea:focus {
  outline: 1px solid var(--vscode-focusBorder);
  outline-offset: -1px;
}

/* Button layout consistency */
.button-group {
  display: flex;
  gap: var(--spacing-xs);
  align-items: center;
  flex-wrap: wrap;
}

/* Control buttons styling */
.control-buttons {
  display: flex;
  gap: var(--spacing-xs);
  align-items: center;
  flex-wrap: wrap;
  margin-bottom: var(--spacing-sm);
}

/* Ensure buttons don't wrap text inside */
button {
  white-space: nowrap;
  min-width: fit-content;
}

/* Path Selector */
.path-selector {
  margin-bottom: var(--spacing-sm);
}

.path-selector .browse-button {
  white-space: nowrap;
}

/* Model Selector */
.model-selector {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.model-selector label {
  font-size: 0.9em;
  color: var(--vscode-foreground);
  min-width: 80px;
}

/* Condition Configuration Controls */
.condition-controls {
  margin-top: var(--spacing-sm);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  align-items: flex-start;
}

.check-command-row {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.condition-row-inline {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.resume-row-inline {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin-top: var(--spacing-sm);
}

.inline-label {
  font-size: 0.9em;
  color: var(--vscode-foreground);
  font-weight: 500;
  min-width: 90px;
  text-align: left;
}

.check-command-input-inline {
  flex: 1;
  min-width: 200px;
}

.remove-condition-btn {
  padding: 2px 6px !important;
  font-size: 12px !important;
  min-width: auto;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.condition-select-inline {
  min-width: 120px;
}

/* ConditionalStepBuilder Component */
.conditional-step-builder {
  padding: var(--spacing-md);
  border: 1px solid var(--vscode-input-border);
  border-radius: var(--border-radius-md);
  background-color: var(--vscode-editor-background);
}

.condition-builder-section {
  margin-bottom: var(--spacing-lg);
}

.condition-builder-section:last-child {
  margin-bottom: 0;
}

.condition-builder-section h4 {
  margin: 0 0 var(--spacing-sm) 0;
  font-size: var(--vscode-font-size);
  font-weight: 600;
  color: var(--vscode-foreground);
}

.condition-options {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.condition-option {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
}

.condition-option input[type="radio"] {
  margin: 0;
}

.condition-label {
  font-size: var(--vscode-font-size);
  color: var(--vscode-foreground);
}

.check-command-config {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.check-command-help {
  margin: 0;
  font-size: 0.9em;
  color: var(--vscode-descriptionForeground);
  line-height: 1.3;
}

.dependencies-config {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.dependencies-help {
  margin: 0;
  font-size: 0.9em;
  color: var(--vscode-descriptionForeground);
  line-height: 1.3;
}

.dependency-checkboxes {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  max-height: 120px;
  overflow-y: auto;
}

.dependency-option {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  cursor: pointer;
  padding: 2px 0;
}

.dependency-option input[type="checkbox"] {
  margin: 0;
}

.dependency-label {
  font-size: var(--vscode-font-size);
  color: var(--vscode-foreground);
}

.condition-summary {
  border-top: 1px solid var(--vscode-input-border);
  padding-top: var(--spacing-md);
}

.summary-content {
  background-color: var(--vscode-input-background);
  padding: var(--spacing-sm);
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--vscode-input-border);
}

.summary-content p {
  margin: 0 0 var(--spacing-xs) 0;
  font-size: 0.9em;
  line-height: 1.3;
}

.summary-content p:last-child {
  margin-bottom: 0;
}

.summary-content code {
  background-color: var(--vscode-textCodeBlock-background);
  padding: 1px 3px;
  border-radius: var(--border-radius-sm);
  font-family: var(--vscode-editor-font-family);
  font-size: 0.85em;
}

/* Paused pipeline and workflow sections */
.paused-pipelines-section,
.resumable-workflows-section {
  border: 1px solid var(--vscode-input-border);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  background-color: var(--vscode-input-background);
}

.paused-pipelines-section h4,
.resumable-workflows-section h4 {
  margin: 0 0 var(--spacing-sm) 0;
  font-size: var(--vscode-font-size);
  font-weight: 600;
  color: var(--vscode-foreground);
}

.paused-pipeline-item,
.resumable-workflow-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-sm);
  border: 1px solid var(--vscode-panel-border);
  border-radius: var(--border-radius-sm);
  background-color: var(--vscode-editor-background);
  margin-bottom: var(--spacing-xs);
}

.paused-pipeline-item:last-child,
.resumable-workflow-item:last-child {
  margin-bottom: 0;
}

.pipeline-info,
.workflow-info {
  display: flex;
  flex-direction: column;
  gap: 2px;
  flex: 1;
}

.pipeline-name,
.workflow-name {
  font-weight: 600;
  font-size: var(--vscode-font-size);
  color: var(--vscode-foreground);
}

.workflow-progress {
  font-size: var(--font-size-sm);
  color: var(--vscode-descriptionForeground);
}

.paused-time {
  font-size: var(--font-size-sm);
  color: var(--vscode-descriptionForeground);
}

.workflow-actions {
  display: flex;
  gap: var(--spacing-xs);
  align-items: center;
}
